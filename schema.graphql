# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type Difficulty {
  id: String!
  name: String!
}

type Equipment {
  id: String!
  name: String!
}

type Exercise {
  difficulty: Difficulty
  difficultyId: Int
  equipment: Equipment
  equipmentId: Int
  exerciseType: ExerciseType
  exerciseTypeId: Int
  id: String!
  muscleGroup: MuscleGroup
  muscleGroupId: Int
  name: String
}

type ExerciseType {
  id: String!
  name: String!
}

type MuscleGroup {
  id: String!
  name: String!
}

type Mutation {
  copyWorkoutById(userId: String!, workoutId: String!): Workout
  createWorkout(workout: WorkoutInput!): Workout
}

type ProfileInfo {
  bio: String
  height: Float
  id: String!
  name: String
  profile_picture: String
  user: User
  weight: Float
}

type Query {
  getDifficultyById(id: String!): Difficulty
  getDifficultyLevels: [Difficulty]
  getDifficultyLevelsByName(name: String!): Difficulty
  getEquipmentById(id: String!): Equipment
  getEquipments: [Equipment]
  getEquipmentsByName(name: String!): Equipment
  getExerciseById(id: String!): Exercise
  getExerciseTypeById(id: String!): ExerciseType
  getExerciseTypes: [ExerciseType]
  getExerciseTypesByName(name: String!): ExerciseType
  getExercises(difficultyId: Int, equipmentId: Int, exerciseTypeId: Int, muscleGroupId: Int, name: String): [Exercise]
  getMuscleGroupById(id: String!): MuscleGroup
  getMuscleGroups: [MuscleGroup]
  getMuscleGroupsByName(name: String!): MuscleGroup
  getUserById(id: String!): User
  getWorkoutById(id: String!): Workout
  getWorkoutsByUserId(userId: String!): [Workout]
}

type User {
  email: String
  id: String!
  password: String
  profileInfo: ProfileInfo
  username: String
  workout: [Workout]
}

type Workout {
  basedOn: Workout
  basedOnId: String
  description: String
  exercises: [WorkoutExercise]
  id: String!
  muscleGroups: [String]
  name: String!
  user: User
  userId: String!
}

type WorkoutExercise {
  exercise: Exercise
  exerciseId: String!
  notes: String
  repetitions: Int!
  rest: Int!
  sets: Int!
  workout: Workout
  workoutId: String!
}

input ExercisesInput {
  exerciseId: String!
  notes: String
  repetitions: Int!
  rest: Int!
  sets: Int!
}

input WorkoutInput {
  basedOnId: String
  description: String
  exercises: [ExercisesInput]
  name: String!
  userId: String!
}
